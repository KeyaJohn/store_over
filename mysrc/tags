!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ALL	sl_log.h	8;"	d
BIN	Makefile	/^BIN=.\/test$/;"	m
CFLAG	Makefile	/^CFLAG= -g -Wall -I.\/ -I..\/inc$/;"	m
DBG	sl_log.h	11;"	d
DIR	Makefile	/^DIR=.$/;"	m
ERR	sl_log.h	12;"	d
INF	sl_log.h	9;"	d
LFLAG	Makefile	/^LFLAG= -L..\/lib -lrt -pthread -lconfig -lzlog$/;"	m
OBJ	Makefile	/^OBJ=$(patsubst %.c,%.o,$(SRC))$/;"	m
PATH_MAX	sl_com.h	4;"	d
SIZE_G	sl_com.h	7;"	d
SIZE_K	sl_com.h	5;"	d
SIZE_M	sl_com.h	6;"	d
SRC	Makefile	/^SRC=$(wildcard $(DIR)\/*.c)$/;"	m
TYPE_DOUBLE	sl_conf.h	/^    TYPE_DOUBLE,$/;"	e	enum:__dat_type_t
TYPE_INT	sl_conf.h	/^    TYPE_INT = 0,$/;"	e	enum:__dat_type_t
TYPE_LONG	sl_conf.h	/^    TYPE_LONG,$/;"	e	enum:__dat_type_t
TYPE_STRING	sl_conf.h	/^    TYPE_STRING$/;"	e	enum:__dat_type_t
WAR	sl_log.h	10;"	d
_SL_INIT_DEF_INFO_H_	init_def_info.h	3;"	d
__SL_COMM_H__	sl_com.h	2;"	d
__SL_CONF_H__	sl_conf.h	2;"	d
__SL_DISK_INFO_H__	init_disk_info.h	2;"	d
__SL_LOG_H__	sl_log.h	2;"	d
__SL_QUE_H__	sl_que.h	2;"	d
__SL_READ_H__	deal_data_pth.h	2;"	d
__SL_WRITE_H__	write_data_pth.h	2;"	d
__dat_type_t	sl_conf.h	/^enum __dat_type_t$/;"	g
__def_info_t	init_def_info.h	/^typedef struct __def_info_t$/;"	s
__disk_info_t	init_disk_info.h	/^typedef struct __disk_info_t$/;"	s
__node_info_t	init_disk_info.h	/^typedef struct __node_info_t$/;"	s
__que_t	sl_que.h	/^typedef struct __que_t$/;"	s
__rthr_info_t	deal_data_pth.h	/^typedef struct __rthr_info_t$/;"	s
__wthr_info_t	write_data_pth.h	/^typedef struct __wthr_info_t$/;"	s
bbuff	init_disk_info.h	/^    que_t           *bbuff;$/;"	m	struct:__disk_info_t
block	sl_que.h	/^    char    **block;$/;"	m	struct:__que_t
block_num	sl_que.h	/^    int     block_num;$/;"	m	struct:__que_t
buff	init_disk_info.h	/^    char buff[SIZE_M];$/;"	m	struct:__node_info_t
buffer	deal_data_pth.h	/^    node_info_t **buffer;$/;"	m	struct:__rthr_info_t
can_read	sl_que.h	20;"	d
can_write	sl_que.h	22;"	d
choose_mode	main.c	/^void choose_mode(int argc,char *argv[])$/;"	f
close_conf	sl_conf.c	/^void close_conf()$/;"	f
close_log	sl_log.c	/^void close_log()$/;"	f
conf	init_def_info.c	/^char * conf = "..\/etc\/store.cfg";$/;"	v
cpu_id	deal_data_pth.h	/^    int cpu_id;$/;"	m	struct:__rthr_info_t
cpu_id	write_data_pth.h	/^   int cpu_id;$/;"	m	struct:__wthr_info_t
ctrl_file	init_def_info.h	/^    char ctrl_file[PATH_MAX];   \/\/管道文件路径$/;"	m	struct:__def_info_t
cur_fsize	init_disk_info.h	/^    int64_t         cur_fsize;\/\/当前文件大小$/;"	m	struct:__disk_info_t
cur_ftime	init_disk_info.h	/^    int64_t         cur_ftime;\/\/写入起始时间$/;"	m	struct:__disk_info_t
daemon_flags	main.c	/^int     daemon_flags = 0;$/;"	v
def_info	init_def_info.c	/^def_info_t  *def_info = NULL;$/;"	v
def_info_t	init_def_info.h	/^}def_info_t;$/;"	t	typeref:struct:__def_info_t
disk_id	init_disk_info.h	/^    int             disk_id;$/;"	m	struct:__disk_info_t
disk_id	write_data_pth.h	/^   int *disk_id;$/;"	m	struct:__wthr_info_t
disk_info	init_disk_info.c	/^disk_info_t *disk_info = NULL;$/;"	v
disk_info_t	init_disk_info.h	/^}disk_info_t;$/;"	t	typeref:struct:__disk_info_t
disk_num	deal_data_pth.h	/^    int disk_num;$/;"	m	struct:__rthr_info_t
disk_num	init_def_info.h	/^    int disk_num;   \/\/磁盘个数$/;"	m	struct:__def_info_t
disk_num	write_data_pth.h	/^   int disk_num;$/;"	m	struct:__wthr_info_t
fbuff	init_disk_info.h	/^    que_t           *fbuff;$/;"	m	struct:__disk_info_t
file_fd	init_disk_info.h	/^    int             file_fd;$/;"	m	struct:__disk_info_t
file_size	init_disk_info.h	/^    int64_t         file_size;\/\/文件指定大小$/;"	m	struct:__disk_info_t
get_opt	main.c	/^static int get_opt(int argc, char *argv[])$/;"	f	file:
get_pdata	deal_data_pth.c	/^char *get_pdata()$/;"	f
get_read	sl_que.h	25;"	d
get_val_arry	sl_conf.c	/^int get_val_arry(char *path, void **val, int count, int dtype)$/;"	f
get_val_single	sl_conf.c	/^int get_val_single(char *path, void *val, int dtype)$/;"	f
get_wdisk	deal_data_pth.c	/^int get_wdisk(rthr_info_t *info)$/;"	f
get_write	sl_que.h	28;"	d
init_deal_pth_info	deal_data_pth.c	/^int init_deal_pth_info()$/;"	f
init_def_info	init_def_info.c	/^int init_def_info()$/;"	f
init_disk_info	init_disk_info.c	/^int init_disk_info()$/;"	f
init_system	main.c	/^void init_system()$/;"	f
init_write_pth	write_data_pth.c	/^int init_write_pth()$/;"	f
len	init_disk_info.h	/^    int len;$/;"	m	struct:__node_info_t
log_file	init_def_info.h	/^    char log_file[PATH_MAX];    \/\/日志文件路径$/;"	m	struct:__def_info_t
log_handle	sl_log.c	/^zlog_category_t *log_handle = NULL;$/;"	v
log_type	main.c	/^char    log_type[8] = {0};$/;"	v
main	main.c	/^int main(int argc, char *argv[])$/;"	f
min_disk_id	deal_data_pth.h	/^    int min_disk_id;$/;"	m	struct:__rthr_info_t
my_aiocb	init_disk_info.h	/^    struct aiocb    *my_aiocb;$/;"	m	struct:__disk_info_t	typeref:struct:__disk_info_t::aiocb
node_info	init_disk_info.h	/^    node_info_t     *node_info;$/;"	m	struct:__disk_info_t
node_info_t	init_disk_info.h	/^}node_info_t;$/;"	t	typeref:struct:__node_info_t
node_num	init_def_info.h	/^    int node_num;   \/\/队列节点个数$/;"	m	struct:__def_info_t
node_size	init_def_info.h	/^    int64_t node_size;  \/\/队列节点大小$/;"	m	struct:__def_info_t
open_conf	sl_conf.c	/^int open_conf(char *name)$/;"	f
open_log	sl_log.c	/^int open_log(char *path, char *mode)$/;"	f
p_conf	sl_conf.c	/^config_t *p_conf = NULL;$/;"	v
path	init_def_info.h	/^    char **path;    \/\/磁盘挂载路径$/;"	m	struct:__def_info_t
path	init_disk_info.h	/^    char            path[PATH_MAX];$/;"	m	struct:__disk_info_t
print_data	init_def_info.c	/^int print_data()$/;"	f
print_deal_pth_info	deal_data_pth.c	/^void print_deal_pth_info()$/;"	f
print_disk_info	init_disk_info.c	/^int print_disk_info()$/;"	f
print_write_pth_info	write_data_pth.c	/^void print_write_pth_info()$/;"	f
que_t	sl_que.h	/^}que_t;$/;"	t	typeref:struct:__que_t
rcpu_id	init_def_info.h	/^    int rcpu_id;   \/\/处理线程的cpuid$/;"	m	struct:__def_info_t
read	sl_que.h	/^    int     read;$/;"	m	struct:__que_t
read_outval	sl_que.h	38;"	d
read_pop	sl_que.h	32;"	d
read_push	sl_que.h	30;"	d
ring_init	sl_que.h	12;"	d
rthr_info	deal_data_pth.c	/^rthr_info_t *rthr_info = NULL; $/;"	v
rthr_info_t	deal_data_pth.h	/^}rthr_info_t;$/;"	t	typeref:struct:__rthr_info_t
rthr_num	init_def_info.h	/^    int rthr_num;   \/\/处理线程个数$/;"	m	struct:__def_info_t
scpu_id	init_def_info.h	/^    int scpu_id;   \/\/信号处理线程的cpuid$/;"	m	struct:__def_info_t
seg_type	init_def_info.h	/^    int seg_type;   \/\/文件分割方式0-时间,1-大小$/;"	m	struct:__def_info_t
seg_type	init_disk_info.h	/^    int             seg_type;\/\/0-time 1-size$/;"	m	struct:__disk_info_t
ssize	init_def_info.h	/^    int64_t ssize;  \/\/文件分割大小$/;"	m	struct:__def_info_t
start_deal_data	deal_data_pth.c	/^int start_deal_data()$/;"	f
start_write_data	write_data_pth.c	/^int start_write_data()$/;"	f
sthr_num	init_def_info.h	/^    int sthr_num;   \/\/信号处理线程个数$/;"	m	struct:__def_info_t
stime	init_def_info.h	/^    int64_t stime;  \/\/文件分割的间隔时间$/;"	m	struct:__def_info_t
thr_id	deal_data_pth.h	/^    int thr_id;$/;"	m	struct:__rthr_info_t
thr_id	write_data_pth.h	/^   int thr_id;$/;"	m	struct:__wthr_info_t
thr_run	deal_data_pth.c	/^void *thr_run(void *args)$/;"	f
thw_run	write_data_pth.c	/^void *thw_run(void *args)$/;"	f
time_temp	init_disk_info.h	/^    int64_t         time_temp;\/\/指定间隔时间$/;"	m	struct:__disk_info_t
w_flag	init_disk_info.h	/^    volatile int    w_flag;$/;"	m	struct:__disk_info_t
wcpu_id	init_def_info.h	/^    int wcpu_id;   \/\/写盘线程的cpuid$/;"	m	struct:__def_info_t
write	sl_que.h	/^    int     write;$/;"	m	struct:__que_t
write_inval	sl_que.h	40;"	d
write_pop	sl_que.h	36;"	d
write_push	sl_que.h	34;"	d
wthr_info	write_data_pth.c	/^wthr_info_t * wthr_info = NULL;$/;"	v
wthr_info_t	write_data_pth.h	/^}wthr_info_t;$/;"	t	typeref:struct:__wthr_info_t
wthr_num	init_def_info.h	/^    int wthr_num;   \/\/写盘线程个数$/;"	m	struct:__def_info_t
